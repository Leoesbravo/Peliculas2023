@model ML.CIne
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 300px;
    }
</style>

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw",
        v: "weekly",
    });
</script>
<h1>Formulario de Cines</h1>
<hr />
<div class="row">
    @Html.HiddenFor(model => model.IdCine)
    <div class="col-md-6">
        @Html.LabelFor(model => model.Nombre)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-ticket"></i></span>
            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-md-3">
        @Html.LabelFor(model => model.Ventas)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-money-bill"></i></span>
            @Html.TextBoxFor(model => model.Ventas, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-md-3">
        @Html.Label("Zona")
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-compass"></i></span>
            @Html.TextBoxFor(model => model.Ventas, new { @class = "form-control" })
        </div>
    </div>
</div>
<div class="row align-items-center">
    <div class="col-md-6">
        @Html.LabelFor(model => model.Direccion)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-location-dot"></i></span>
            @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @readonly = true, @placeholder ="Selecciona un punto en el mapa", @id="txtdireccion" })
        </div>
    </div>
    <div class="col-md-3 text-center">
        <button id="btnGuardar" class="btn btn-success form-control" type="submit"><i class="fa-solid fa-floppy-disk"></i> Guardar</button>
    </div>
    <div class="col-md-3 text-center">
        <a id="btnCancelar" class="btn btn-danger form-control" href="@Url.Action("GetAll", "Cine")"><i class="fa-solid fa-right-from-bracket"></i> Volver</a>
    </div>
</div>
<div id="map" class="border-top border-secondary border-3"></div>

@section Scripts{
    <script type="text/javascript">

        let map;
        let position;

        async function initMap() {
            var address = document.getElementById("txtdireccion").value;

            // Request needed libraries.
            const { Map } = await google.maps.importLibrary("maps");

            if (address != "") {
                var geocodes = new google.maps.Geocoder();
                geocodes.geocode({ 'address': address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        position = { lat: results[0].geometry.location.lat(), lng: results[0].geometry.location.lng() };
                        createMap(position);
                    }
                });
            } else {
                position = { lat: 19.430570307662446, lng: -99.16166352568936 };            
                createMap(position);
            }
        }

        function createMap(position) {
            // The map, centered at the specified position
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 14,
                center: position,
                mapId: "DEMO_MAP_ID",
            });

            let infoWindow = new google.maps.InfoWindow({
                content: "Presiona la locación",
                position: position,
            });

            infoWindow.open(map);

            // Obtener dirección al hacer clic en el mapa
            google.maps.event.addListener(map, 'click', function (event) {
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({
                    'latLng': event.latLng
                }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            $("#txtdireccion").val(results[0].formatted_address);
                        }
                    }
                });
            });
        }

        initMap();

    </script>
}

